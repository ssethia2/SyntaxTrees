  Building Custom Rule C:/msys64/home/Satvik/meta/src/embeddings/CMakeLists.txt
  CMake does not need to re-run because C:/Users/Satvik/of_v0.9.8_vs_release/apps/myApps/final-project-ssethia2/src/embeddings/CMakeFiles/generate.stamp is up-to-date.
  cooccurrence_counter.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\msys64\home\satvik\meta\include\meta\embeddings\cooccurrence_counter.h(180): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\src\embeddings\cooccurrence_counter.cpp(345): warning C4244: 'argument': conversion from 'uint64_t' to 'double', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
c:\msys64\home\satvik\meta\include\meta\hashing\hash.h(351): warning C4244: 'argument': conversion from 'uint64_t' to 'meta::hashing::murmur_hash<4>::result_type', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(499): note: see reference to function template instantiation 'unsigned int meta::hashing::hash<meta::hashing::default_hasher<4>::type>::operator ()<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>(const T &) const' being compiled
          with
          [
              T=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(499): note: see reference to function template instantiation 'unsigned int meta::hashing::hash<meta::hashing::default_hasher<4>::type>::operator ()<std::basic_string<char,std::char_traits<char>,std::allocator<char>>>(const T &) const' being compiled
          with
          [
              T=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(498): note: while compiling class template member function 'meta::hashing::key_value_storage_iterator<const meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>> meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>::find(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &) const'
          with
          [
              K=std::string,
              V=uint64_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<std::string>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\cooccurrence_counter.cpp(198): note: see reference to function template instantiation 'meta::hashing::key_value_storage_iterator<const meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>> meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>::find(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &) const' being compiled
          with
          [
              K=std::string,
              V=uint64_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<std::string>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(1129): note: see reference to class template instantiation 'meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>' being compiled
          with
          [
              K=std::string,
              V=uint64_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<std::string>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\probe_map.h(42): note: see reference to class template instantiation 'meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>' being compiled
          with
          [
              K=std::string,
              V=uint64_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<std::string>
          ]
  c:\msys64\home\satvik\meta\include\meta\embeddings\cooccurrence_counter.h(204): note: see reference to class template instantiation 'meta::hashing::probe_map<std::string,uint64_t,meta::hashing::probing::binary,meta::hashing::hash<meta::hashing::default_hasher<4>::type>,std::equal_to<_Kty>,meta::hashing::hash_traits<meta::hashing::kv_pair<Key,Value>>>' being compiled
          with
          [
              _Kty=std::string,
              Key=std::string,
              Value=uint64_t
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(25): warning C4244: '=': conversion from 'uint64_t' to 'unsigned long', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(109): note: see reference to function template instantiation '_Ty std::accumulate<ForwardIterator,unsigned long,meta::util::multiway_merge::<lambda_4885c1f939eeccc848f08f329ce9be62>>(_InIt,const _InIt,_Ty,_Fn)' being compiled
          with
          [
              _Ty=unsigned long,
              ForwardIterator=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<meta::embeddings::memory_cooccur_iterator>>>,
              _InIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<meta::embeddings::memory_cooccur_iterator>>>,
              _Fn=meta::util::multiway_merge::<lambda_4885c1f939eeccc848f08f329ce9be62>
          ]
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(183): note: see reference to function template instantiation 'uint64_t meta::util::multiway_merge<ForwardIterator,_Ty,meta::util::multiway_merge::<lambda_4598ca8fe582561dedfce83e9914322c>&,meta::util::multiway_merge::<lambda_bd7474d337e57521ed87a0aa240b3f9e>&,ProgressTrait>(ForwardIterator,ForwardIterator,Compare,ShouldMerge,RecordHandler &&,ProgressTrait)' being compiled
          with
          [
              ForwardIterator=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<meta::embeddings::memory_cooccur_iterator>>>,
              _Ty=meta::embeddings::cooccurrence_counter::memory_merge_chunks::<lambda_a50dd162dd0520cb56657e80ca97c9f8>,
              ProgressTrait=meta::printing::no_progress_trait,
              Compare=meta::util::multiway_merge::<lambda_4598ca8fe582561dedfce83e9914322c> &,
              ShouldMerge=meta::util::multiway_merge::<lambda_bd7474d337e57521ed87a0aa240b3f9e> &,
              RecordHandler=meta::embeddings::cooccurrence_counter::memory_merge_chunks::<lambda_a50dd162dd0520cb56657e80ca97c9f8>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\cooccurrence_counter.cpp(269): note: see reference to function template instantiation 'uint64_t meta::util::multiway_merge<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,meta::embeddings::cooccurrence_counter::memory_merge_chunks::<lambda_a50dd162dd0520cb56657e80ca97c9f8>,meta::printing::no_progress_trait>(ForwardIterator,ForwardIterator,RecordHandler &&,ProgressTrait)' being compiled
          with
          [
              _Ty=meta::embeddings::memory_cooccur_iterator,
              ForwardIterator=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<meta::embeddings::memory_cooccur_iterator>>>,
              RecordHandler=meta::embeddings::cooccurrence_counter::memory_merge_chunks::<lambda_a50dd162dd0520cb56657e80ca97c9f8>,
              ProgressTrait=meta::printing::no_progress_trait
          ]
c:\msys64\home\satvik\meta\include\meta\io\packed.h(287): warning C4146: unary minus operator applied to unsigned type, result still unsigned
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(306): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,int64_t>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=int64_t
          ]
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(411): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,T>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=double
          ]
  c:\msys64\home\satvik\meta\include\meta\embeddings\cooccur_record.h(69): note: see reference to function template instantiation 'uint64_t meta::io::packed::read<InputStream,double>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=double
          ]
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(411): note: see reference to function template instantiation 'uint64_t meta::embeddings::packed_read<InputStream>(InputStream &,meta::embeddings::cooccur_record &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream
          ]
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(226): note: see reference to function template instantiation 'uint64_t meta::io::packed::read<meta::io::mmap_ifstream,Record>(InputStream &,T &)' being compiled
          with
          [
              Record=meta::embeddings::cooccur_record,
              InputStream=meta::io::mmap_ifstream,
              T=meta::embeddings::cooccur_record
          ]
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(217): note: while compiling class template member function 'meta::util::chunk_iterator<meta::embeddings::cooccur_record> &meta::util::chunk_iterator<meta::embeddings::cooccur_record>::operator ++(void)'
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(206): note: see reference to function template instantiation 'meta::util::chunk_iterator<meta::embeddings::cooccur_record> &meta::util::chunk_iterator<meta::embeddings::cooccur_record>::operator ++(void)' being compiled
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(283): note: see reference to class template instantiation 'meta::util::chunk_iterator<meta::embeddings::cooccur_record>' being compiled
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\vector(968): note: see reference to class template instantiation 'meta::util::destructive_chunk_iterator<meta::embeddings::cooccur_record>' being compiled
  c:\msys64\home\satvik\meta\src\embeddings\cooccurrence_counter.cpp(297): note: see reference to function template instantiation 'void std::vector<meta::embeddings::destructive_cooccur_iterator,std::allocator<_Ty>>::emplace_back<const std::string&>(const std::string &)' being compiled
          with
          [
              _Ty=meta::embeddings::destructive_cooccur_iterator
          ]
  word_embeddings.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\algorithm(1321): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\algorithm(1321): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(81): note: see reference to function template instantiation '_OutIt *std::transform<T*,T*,meta::embeddings::word_embeddings::{ctor}::<lambda_ea465c93eca0b70d68ddb9e6fabd4612>>(const _InIt,const _InIt,_OutIt,_Fn)' being compiled
          with
          [
              _OutIt=double *,
              T=double,
              _InIt=double *,
              _Fn=meta::embeddings::word_embeddings::{ctor}::<lambda_ea465c93eca0b70d68ddb9e6fabd4612>
          ]
c:\msys64\home\satvik\meta\include\meta\hashing\hash.h(351): warning C4244: 'argument': conversion from 'uint64_t' to 'meta::hashing::murmur_hash<4>::result_type', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(499): note: see reference to function template instantiation 'unsigned int meta::hashing::hash<meta::hashing::default_hasher<4>::type>::operator ()<meta::util::basic_string_view<char,std::char_traits<char>>>(const T &) const' being compiled
          with
          [
              T=meta::util::basic_string_view<char,std::char_traits<char>>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(499): note: see reference to function template instantiation 'unsigned int meta::hashing::hash<meta::hashing::default_hasher<4>::type>::operator ()<meta::util::basic_string_view<char,std::char_traits<char>>>(const T &) const' being compiled
          with
          [
              T=meta::util::basic_string_view<char,std::char_traits<char>>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(498): note: while compiling class template member function 'meta::hashing::key_value_storage_iterator<const meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>> meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>::find(const meta::util::basic_string_view<char,std::char_traits<char>> &) const'
          with
          [
              K=meta::util::string_view,
              V=::size_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<meta::util::string_view>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(115): note: see reference to function template instantiation 'meta::hashing::key_value_storage_iterator<const meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>> meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>::find(const meta::util::basic_string_view<char,std::char_traits<char>> &) const' being compiled
          with
          [
              K=meta::util::string_view,
              V=::size_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<meta::util::string_view>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\hash_storage.h(1129): note: see reference to class template instantiation 'meta::hashing::storage_base<meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>>' being compiled
          with
          [
              K=meta::util::string_view,
              V=::size_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<meta::util::string_view>
          ]
  c:\msys64\home\satvik\meta\include\meta\hashing\probe_map.h(42): note: see reference to class template instantiation 'meta::hashing::external_key_value_storage<K,V,ProbingStrategy,Hash,KeyEqual>' being compiled
          with
          [
              K=meta::util::string_view,
              V=::size_t,
              ProbingStrategy=meta::hashing::probing::binary,
              Hash=meta::hashing::hash<meta::hashing::default_hasher<4>::type>,
              KeyEqual=std::equal_to<meta::util::string_view>
          ]
  c:\msys64\home\satvik\meta\include\meta\embeddings\word_embeddings.h(112): note: see reference to class template instantiation 'meta::hashing::probe_map<meta::util::string_view,::size_t,meta::hashing::probing::binary,meta::hashing::hash<meta::hashing::default_hasher<4>::type>,std::equal_to<Key>,meta::hashing::hash_traits<meta::hashing::kv_pair<Key,Value>>>' being compiled
          with
          [
              Key=meta::util::string_view,
              Value=::size_t
          ]
c:\msys64\home\satvik\meta\include\meta\util\fixed_heap.tcc(54): warning C4244: 'return': conversion from 'const uint64_t' to 'unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\fixed_heap.tcc(53): note: while compiling class template member function 'unsigned int meta::util::fixed_heap<meta::embeddings::scored_embedding,meta::embeddings::word_embeddings::top_k::<lambda_fa0fc50365332da6665f889f3945752a>>::max_elems(void) const'
  c:\msys64\home\satvik\meta\include\meta\util\fixed_heap.tcc(38): note: see reference to function template instantiation 'unsigned int meta::util::fixed_heap<meta::embeddings::scored_embedding,meta::embeddings::word_embeddings::top_k::<lambda_fa0fc50365332da6665f889f3945752a>>::max_elems(void) const' being compiled
  c:\msys64\home\satvik\meta\include\meta\util\fixed_heap.tcc(35): note: while compiling class template member function 'void meta::util::fixed_heap<meta::embeddings::scored_embedding,meta::embeddings::word_embeddings::top_k::<lambda_fa0fc50365332da6665f889f3945752a>>::push(const T &)'
          with
          [
              T=meta::embeddings::scored_embedding
          ]
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(151): note: see reference to function template instantiation 'void meta::util::fixed_heap<meta::embeddings::scored_embedding,meta::embeddings::word_embeddings::top_k::<lambda_fa0fc50365332da6665f889f3945752a>>::push(const T &)' being compiled
          with
          [
              T=meta::embeddings::scored_embedding
          ]
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(141): note: see reference to class template instantiation 'meta::util::fixed_heap<meta::embeddings::scored_embedding,meta::embeddings::word_embeddings::top_k::<lambda_fa0fc50365332da6665f889f3945752a>>' being compiled
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(159): warning C4996: 'std::inner_product::_Unchecked_iterators::_Deprecate': Call to 'std::inner_product' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(159): note: see declaration of 'std::inner_product::_Unchecked_iterators::_Deprecate'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(195): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn1,_Fn2)' being compiled
          with
          [
              _Ty=double,
              _InIt1=const double *,
              _InIt2=const double *,
              _Fn1=std::plus<void>,
              _Fn2=std::multiplies<void>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(148): note: see reference to function template instantiation '_Ty std::inner_product<T*,T*,double>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
          with
          [
              _Ty=double,
              T=const double,
              _InIt1=const double *,
              _InIt2=const double *
          ]
c:\msys64\home\satvik\meta\include\meta\io\packed.h(287): warning C4146: unary minus operator applied to unsigned type, result still unsigned
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(306): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,int64_t>(InputStream &,T &)' being compiled
          with
          [
              InputStream=std::istream,
              T=int64_t
          ]
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(424): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,T>(InputStream &,T &)' being compiled
          with
          [
              InputStream=std::istream,
              T=double
          ]
  c:\msys64\home\satvik\meta\src\embeddings\word_embeddings.cpp(44): note: see reference to function template instantiation 'T meta::io::packed::read<double,std::istream>(InputStream &)' being compiled
          with
          [
              T=double,
              InputStream=std::istream
          ]
  Generating Code...
  meta-embeddings.vcxproj -> C:\Users\Satvik\of_v0.9.8_vs_release\apps\myApps\final-project-ssethia2\lib\Debug\meta-embeddings.lib
