  Building Custom Rule C:/msys64/home/Satvik/meta/src/embeddings/tools/CMakeLists.txt
  CMake does not need to re-run because C:/Users/Satvik/of_v0.9.8_vs_release/apps/myApps/final-project-ssethia2/src/embeddings/tools/CMakeFiles/generate.stamp is up-to-date.
  glove.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(243): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(248): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(265): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(270): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(291): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(303): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(159): warning C4996: 'std::inner_product::_Unchecked_iterators::_Deprecate': Call to 'std::inner_product' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(159): note: see declaration of 'std::inner_product::_Unchecked_iterators::_Deprecate'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\numeric(195): note: see reference to function template instantiation '_Ty std::inner_product<_InIt1,_InIt2,_Ty,std::plus<void>,std::multiplies<void>>(_InIt1,_InIt1,_InIt2,_Ty,_Fn1,_Fn2)' being compiled
          with
          [
              _Ty=double,
              _InIt1=const double *,
              _InIt2=const double *,
              _Fn1=std::plus<void>,
              _Fn2=std::multiplies<void>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(278): note: see reference to function template instantiation '_Ty std::inner_product<T*,T*,double>(_InIt1,_InIt1,_InIt2,_Ty)' being compiled
          with
          [
              _Ty=double,
              T=const double,
              _InIt1=const double *,
              _InIt2=const double *
          ]
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\algorithm(1379): warning C4996: 'std::transform::_Unchecked_iterators::_Deprecate': Call to 'std::transform' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\algorithm(1378): note: see declaration of 'std::transform::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(457): note: see reference to function template instantiation '_OutIt std::transform<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,T*,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,glove_trainer::save_embeddings::<lambda_675836b8b668c67a838c420be74b3133>>(const _InIt1,const _InIt1,const _InIt2,_OutIt,_Fn)' being compiled
          with
          [
              _OutIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>,
              _Ty=double,
              T=const double,
              _InIt1=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<double>>>,
              _InIt2=const double *,
              _Fn=glove_trainer::save_embeddings::<lambda_675836b8b668c67a838c420be74b3133>
          ]
  c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(419): note: see reference to function template instantiation 'void glove_trainer::save_embeddings<glove_trainer::save::<lambda_93a1c998fbc2995f429e8cb6d18547b5>>(std::ofstream &,uint64_t,uint64_t,meta::printing::progress &,VectorFetcher &&) const' being compiled
          with
          [
              VectorFetcher=glove_trainer::save::<lambda_93a1c998fbc2995f429e8cb6d18547b5>
          ]
c:\msys64\home\satvik\meta\include\meta\io\packed.h(287): warning C4146: unary minus operator applied to unsigned type, result still unsigned
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(306): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,int64_t>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=int64_t
          ]
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(411): note: see reference to function template instantiation 'unsigned __int64 meta::io::packed::packed_read<InputStream,T>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=double
          ]
  c:\msys64\home\satvik\meta\include\meta\embeddings\cooccur_record.h(69): note: see reference to function template instantiation 'uint64_t meta::io::packed::read<InputStream,double>(InputStream &,T &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream,
              T=double
          ]
  c:\msys64\home\satvik\meta\include\meta\io\packed.h(411): note: see reference to function template instantiation 'uint64_t meta::embeddings::packed_read<InputStream>(InputStream &,meta::embeddings::cooccur_record &)' being compiled
          with
          [
              InputStream=meta::io::mmap_ifstream
          ]
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(226): note: see reference to function template instantiation 'uint64_t meta::io::packed::read<meta::io::mmap_ifstream,Record>(InputStream &,T &)' being compiled
          with
          [
              Record=meta::embeddings::cooccur_record,
              InputStream=meta::io::mmap_ifstream,
              T=meta::embeddings::cooccur_record
          ]
  c:\msys64\home\satvik\meta\include\meta\util\multiway_merge.h(217): note: while compiling class template member function 'meta::util::chunk_iterator<meta::embeddings::cooccur_record> &meta::util::chunk_iterator<meta::embeddings::cooccur_record>::operator ++(void)'
  c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(52): note: see reference to function template instantiation 'meta::util::chunk_iterator<meta::embeddings::cooccur_record> &meta::util::chunk_iterator<meta::embeddings::cooccur_record>::operator ++(void)' being compiled
  c:\msys64\home\satvik\meta\src\embeddings\tools\glove.cpp(43): note: see reference to class template instantiation 'meta::util::chunk_iterator<meta::embeddings::cooccur_record>' being compiled
LINK : fatal error LNK1104: cannot open file '..\..\..\lib\Debug\meta-io.lib'
