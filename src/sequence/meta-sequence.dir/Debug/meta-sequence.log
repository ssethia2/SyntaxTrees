  Building Custom Rule C:/msys64/home/Satvik/meta/src/sequence/CMakeLists.txt
  CMake does not need to re-run because C:/Users/Satvik/of_v0.9.8_vs_release/apps/myApps/final-project-ssethia2/src/sequence/CMakeFiles/generate.stamp is up-to-date.
  observation.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
  sequence.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
  sequence_analyzer.cpp
c:\program files (x86)\gnuwin32\include\zconf.h(289): fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory
  trellis.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(55): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(62): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(74): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(15): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(15): note: while compiling class template member function 'meta::util::dense_matrix<double>::dense_matrix(uint64_t,uint64_t)'
  c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(16): note: see reference to function template instantiation 'meta::util::dense_matrix<double>::dense_matrix(uint64_t,uint64_t)' being compiled
  c:\msys64\home\satvik\meta\include\meta\sequence\trellis.h(33): note: see reference to class template instantiation 'meta::util::dense_matrix<double>' being compiled
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(30): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(29): note: while compiling class template member function 'const double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t) const'
  c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(33): note: see reference to function template instantiation 'const double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t) const' being compiled
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(24): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(23): note: while compiling class template member function 'double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t)'
  c:\msys64\home\satvik\meta\src\sequence\trellis.cpp(28): note: see reference to function template instantiation 'double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t)' being compiled
  markov_model.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(19): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(31): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(37): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(66): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(72): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(93): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(125): warning C4244: 'argument': conversion from 'const uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(128): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(145): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(15): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(15): note: while compiling class template member function 'meta::util::dense_matrix<double>::dense_matrix(uint64_t,uint64_t)'
  c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(20): note: see reference to function template instantiation 'meta::util::dense_matrix<double>::dense_matrix(uint64_t,uint64_t)' being compiled
  c:\msys64\home\satvik\meta\include\meta\sequence\markov_model.h(55): note: see reference to class template instantiation 'meta::util::dense_matrix<double>' being compiled
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(30): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(29): note: while compiling class template member function 'const double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t) const'
  c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(128): note: see reference to function template instantiation 'const double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t) const' being compiled
c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(24): warning C4244: 'argument': conversion from 'uint64_t' to 'const unsigned int', possible loss of data
  c:\msys64\home\satvik\meta\include\meta\util\dense_matrix.tcc(23): note: while compiling class template member function 'double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t)'
  c:\msys64\home\satvik\meta\src\sequence\markov_model.cpp(44): note: see reference to function template instantiation 'double &meta::util::dense_matrix<double>::operator ()(uint64_t,uint64_t)' being compiled
  ptb_parser.cpp
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(284): warning C4307: '*': integral constant overflow
c:\msys64\home\satvik\meta\include\meta\hashing\hashes\metro_hash.h(161): warning C4244: 'return': conversion from 'uint64_t' to '::size_t', possible loss of data
c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): warning C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\xutility(2440): note: see declaration of 'std::copy::_Unchecked_iterators::_Deprecate'
  c:\msys64\home\satvik\meta\include\meta\hashing\hashes\farm_hash.h(269): note: see reference to function template instantiation '_OutIt std::copy<const uint8_t*,uint8_t*>(_InIt,_InIt,_OutIt)' being compiled
          with
          [
              _OutIt=uint8_t *,
              _InIt=const uint8_t *
          ]
  Generating Code...
